@inject ICategoryService CategoryService


<div class="top-row ps-3 navbar navbar-dark navbar-toggler-wrapper">
    <div class="container-fluid">
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-nav">
        <div class="nav-item px-2">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        
        @if (Categories?.Count > 0)
        {
            @foreach (var category in Categories)
            {
                <div class="nav-item px-2">
                    <NavLink class="nav-link" href="@category.Url">
                        <span class="oi oi-plus" aria-hidden="true"></span> @category.Name
                    </NavLink>
                </div>
            } 
        }
        else
        {
            <span>Loading Data</span>
        }
        
    </nav>
</div>

@code {
    private List<Category>? Categories { get; set; }
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    // *** ON INIT ***
    protected override async Task OnInitializedAsync()
    {
        var categories = await CategoryService.GetAllCategories();
        Categories = categories?.Data;
    }

}

